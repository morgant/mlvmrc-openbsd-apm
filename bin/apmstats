#!/usr/local/bin/bash

# 
# apmstats - show updating OpenBSD APM processor & battery related stats
# 
# Loosely based on:
#
# - https://bpaste.net/show/RYRQ
# - https://github.com/vetelko/termbar
#
# CHANGE LOG:
#
# v0.1   - 2019-08-14 - Morgan Aldridge <morgant@makkintosshu.com>
#                       Initial version
# v0.1.1 - 2020-11-21 - Morgan Aldridge
#                       Minor optimizations
# v0.1.2 - 2020-11-22 - Morgan Aldridge
#                       Added CPU load to -cpu option
#
# LICENSE:
#
# Copyright (c) 2019-2020 Morgan Aldridge
#
# Permission is hereby granted, free of charge, to any person obtaining a copy 
# of this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

update=10
should_sleep=true
stats=()

while [ -n "$1" ]; do
  case "$1" in
    "-u")
      shift
      update="$1"
      ;;
    "-cpu")
      stats+=("cpu")
      should_sleep=false
      ;;
    "-cputemp")
      stats+=("cputemp")
      ;;
    "-battery")
      stats+=("battery")
      ;;
    "-a")
      stats=("cpu" "cputemp" "battery")
      ;;
    *)
      echo "ERROR! Unknown parameter '$1'!"
      exit 1
      ;;
  esac
  shift
done

# hide the terminal cursor
tput civis

while true; do
  echo -n -e '\r'
  for stat in "${stats[@]}"; do
    case "$stat" in
      "cpu")
        cpu_load="$(iostat -Cc 2 -w ${update} | tail -n 1 | awk '{print $6}')"
        cpu_speed="$(sysctl -n hw.cpuspeed | cut -d "." -f 1)"
        printf "%3i%% @ %4iMHz" "$(( 100 - cpu_load ))" "${cpu_speed}"
        ;;
      "cputemp")
        cpu_temp="$(sysctl -n hw.sensors.cpu0.temp0 | cut -d "." -f 1)"
        printf "%3iC" "${cpu_temp}"
        ;;
      "battery")
        battery_percent="$(apm -l)"
        printf "%3i%%" "${battery_percent}"
        ;;
    esac
  done
  if $should_sleep ; then
    sleep "${update}"
  fi
done
